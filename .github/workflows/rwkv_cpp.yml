name: Build rwkv.cpp

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  get_short_commit_hash:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.short_commit_hash.outputs.short }}
    steps:
      - name: Prepare commit hash
        id: commit_hash
        run: |
          git clone https://github.com/RWKV/rwkv.cpp cache --depth 1
          cd cache
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          cd ..
          rm -rf cache
      - name: Get short commit hash
        id: short_commit_hash
        uses: prompt/actions-commit-hash@v3
        with:
          commit: ${{ steps.commit_hash.outputs.hash }}
  build_clblast_avx2_linux:
    needs: get_short_commit_hash
    runs-on: ubuntu-latest
    steps:
      - name: Install Deps
        run: sudo apt-get install libclblast-dev ccache ninja-build zip -y
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: RWKV/rwkv.cpp
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=RELEASE -DRWKV_CLBLAST=ON -DRWKV_STANDALONE=ON
          cmake --build . --config Release -j $(nproc)
      - name: Pack
        run: |
          mkdir -p build/dist
          cd build
          zip dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-clblast-x64.zip librwkv.so
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: clblast-avx2-linux
          path: build/dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-clblast-x64.zip
  build_cu121_avx2_linux:
    needs: get_short_commit_hash
    runs-on: ubuntu-latest
    steps:
      - name: Install CUDA 12.1
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.19
        with:
          cuda: "12.1.1"
          method: network
      - name: Install Deps
        run: sudo apt-get install ccache ninja-build zip -y
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: RWKV/rwkv.cpp
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=RELEASE -DRWKV_CUBLAS=ON -DRWKV_STANDALONE=ON
          cmake --build . --config Release -j $(nproc)
      - name: Pack
        run: |
          mkdir -p build/dist
          cd build
          zip dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-cuda121-x64.zip librwkv.so
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cu121-avx2-linux
          path: build/dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-cuda121-x64.zip
  build_clblast_avx2_win:
    needs: get_short_commit_hash
    runs-on: windows-latest
    steps:
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          windows_compile_environment: msvc
      - name: Install Ninja
        uses: urkle/action-get-ninja@v1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: RWKV/rwkv.cpp
          submodules: recursive
      - name: Setup OpenCL & CLBlast
        run: |
          vcpkg install opencl clblast
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DRWKV_CLBLAST=ON -DCMAKE_PREFIX_PATH="C:/vcpkg/installed/x64-windows/lib;C:/vcpkg/installed/x64-windows/include" -DRWKV_STANDALONE=ON
          cmake --build . --config Release -j $env:NUMBER_OF_PROCESSORS
      - name: Pack
        run: |
          cd build\bin\
          cp C:/vcpkg/packages/clblast_x64-windows/bin/clblast.dll .
          7z a ..\dist\rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx2-clblast-x64.zip ./*
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: clblast-avx2-win
          path: build/dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx2-clblast-x64.zip
  build_cu121_avx512_win:
    needs: get_short_commit_hash
    runs-on: windows-latest
    steps:
      - name: Setup VS Dev Environment
        uses: seanmiddleditch/gha-setup-vsdevenv@v4
      - name: Install CUDA 12.1
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.19
        with:
          cuda: "12.1.1"
          method: network
          sub-packages: '["nvcc", "cudart", "cublas", "cublas_dev", "thrust", "visual_studio_integration"]'
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          windows_compile_environment: msvc
      - name: Install Ninja
        uses: urkle/action-get-ninja@v1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: RWKV/rwkv.cpp
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=RELEASE -DRWKV_CUBLAS=ON -DRWKV_AVX512=ON -DRWKV_STANDALONE=ON
          cmake --build . --config Release -j $env:NUMBER_OF_PROCESSORS
      - name: Pack
        run: |
          cd build\bin\
          7z a ..\dist\rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx512-cuda121-x64.zip rwkv.dll
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cu121-avx512-win
          path: build/dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx512-cuda121-x64.zip
  build_cu113_avx2_win:
    needs: get_short_commit_hash
    runs-on: windows-2019
    steps:
      - name: Setup VS Dev Environment
        uses: seanmiddleditch/gha-setup-vsdevenv@v4
      - name: Install CUDA 11.3
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.19
        with:
          cuda: "11.3.1"
          method: network
          sub-packages: '["nvcc", "cudart", "cublas", "cublas_dev", "thrust", "visual_studio_integration"]'
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          windows_compile_environment: msvc
      - name: Install Ninja
        uses: urkle/action-get-ninja@v1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: RWKV/rwkv.cpp
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=RELEASE -DRWKV_CUBLAS=ON -DCMAKE_CUDA_ARCHITECTURES="35" -DRWKV_STANDALONE=ON
          cmake --build . --config Release -j $env:NUMBER_OF_PROCESSORS
      - name: Pack
        run: |
          cd build\bin\
          7z a ..\dist\rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx2-cuda113-x64.zip rwkv.dll
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cu113-avx2-win
          path: build/dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx2-cuda113-x64.zip
  release:
    runs-on: ubuntu-latest
    needs: [get_short_commit_hash, build_clblast_avx2_linux, build_cu121_avx2_linux, build_clblast_avx2_win, build_cu121_avx512_win, build_cu113_avx2_win]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: |
            dist/
      - name: Prepare Release
        run: |
          cd dist
          mv -f clblast-avx2-linux/* .
          mv -f cu121-avx2-linux/* .
          mv -f clblast-avx2-win/* .
          mv -f cu121-avx512-win/* .
          mv -f cu113-avx2-win/* .
          rm -rf clblast-avx2-linux cu121-avx2-linux clblast-avx2-win cu121-avx512-win cu113-avx2-win 
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: rwkv_cpp-${{ needs.get_short_commit_hash.outputs.hash }}
          name: Binary build for rwkv.cpp (${{ needs.get_short_commit_hash.outputs.hash }})
          body: |
            This release contains the x86_64 binary of [rwkv.cpp](https://github.com/saherNooby/rwkv.cpp).
          files: dist/*
          fail_on_unmatched_files: true
